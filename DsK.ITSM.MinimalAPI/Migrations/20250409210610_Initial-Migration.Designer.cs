// <auto-generated />
using System;
using DsK.ITSM.MinimalAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DsK.ITSM.MinimalAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250409210610_Initial-Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.Workflow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Workflows");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowAdditionalFieldDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowAdditionalFieldDefinitions");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowAssignedTo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssignedToUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowAssignedTos");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowAssignedToAutomatic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkflowAssignedToId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowAssignedToId");

                    b.ToTable("WorkflowAssignedToAutomatics");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowStatusDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowStatusDefinitions");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowStatusTransition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FromStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId", "FromStatusId", "ToStatusId")
                        .IsUnique();

                    b.ToTable("WorkflowStatusTransitions");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedToUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrentStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowTasks");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowTaskAdditionalField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WorkflowTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowTaskId");

                    b.ToTable("WorkflowTaskAdditionalFields");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowTaskStatusHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChangedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkflowTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowTaskId");

                    b.ToTable("WorkflowTaskStatusHistories");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.RefreshToken", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.Workflow", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.User", "CreatedByUser")
                        .WithMany("CreatedWorkflows")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowAdditionalFieldDefinition", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.Workflow", "Workflow")
                        .WithMany("AdditionalFieldDefinitions")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowAssignedTo", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.Workflow", "Workflow")
                        .WithMany("AssignedUsers")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowAssignedToAutomatic", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowAssignedTo", "WorkflowAssignedTo")
                        .WithMany()
                        .HasForeignKey("WorkflowAssignedToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkflowAssignedTo");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowStatusDefinition", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.Workflow", "Workflow")
                        .WithMany("StatusDefinitions")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowStatusTransition", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.Workflow", "Workflow")
                        .WithMany("StatusTransitions")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowTask", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.User", "AssignedToUser")
                        .WithMany()
                        .HasForeignKey("AssignedToUserId");

                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.Workflow", "Workflow")
                        .WithMany("WorkflowTasks")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedToUser");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowTaskAdditionalField", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowTask", "WorkflowTask")
                        .WithMany("AdditionalFields")
                        .HasForeignKey("WorkflowTaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("WorkflowTask");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowTaskStatusHistory", b =>
                {
                    b.HasOne("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowTask", "WorkflowTask")
                        .WithMany("StatusHistory")
                        .HasForeignKey("WorkflowTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkflowTask");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.User", b =>
                {
                    b.Navigation("CreatedWorkflows");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.Workflow", b =>
                {
                    b.Navigation("AdditionalFieldDefinitions");

                    b.Navigation("AssignedUsers");

                    b.Navigation("StatusDefinitions");

                    b.Navigation("StatusTransitions");

                    b.Navigation("WorkflowTasks");
                });

            modelBuilder.Entity("DsK.ITSM.MinimalAPI.Data.Entities.WorkflowTask", b =>
                {
                    b.Navigation("AdditionalFields");

                    b.Navigation("StatusHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
